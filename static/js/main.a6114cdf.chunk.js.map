{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/DisplayReview.js","components/AddReview.js","components/Reviews.js","components/ShowList.js","components/Shows.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","title","Component","Footer","DisplayReview","reviews","deleteReview","reviewList","length","map","review","name","comment","id","style","width","fontSize","onClick","AddReview","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addReview","onSubmit","this","type","placeholder","onChange","Reviews","newReview","Math","floor","random","console","log","newData","filter","ShowList","isFavourite","isInfoVisible","handleClick","prevProps","show","genres","str","myStyle","display","key","src","image","medium","alt","network","premiered","status","language","React","Shows","shows","showList","join","summary","replace","App","prevEpisodes","axios","get","then","response","content","data","item","links","_links","previousepisode","nextepisode","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6114cdf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../style.css';\r\n\r\nclass Navbar extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className='navigation'>\r\n            <nav>\r\n                <h1>TVMaze</h1>\r\n                \r\n                <div className='menu'>\r\n                    <a href='#review-section' title='Write a review'><span>Write a review</span></a>\r\n                </div>\r\n            </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport '../style.css';\r\n\r\n\r\nclass Footer extends Component{\r\n    \r\n    render(){\r\n        return(\r\n                <footer>\r\n                    <ul className=\"contact\">\r\n                        <li className=\"links\"><a href=\"https://www.instagram.com/\">Instagram</a></li> \r\n                        <li className=\"links\"><a href=\"https://twitter.com/explore\">Twitter</a></li>\r\n                        <li className=\"links\"><a href=\"https://www.facebook.com/\">Facebook</a></li>\r\n                    </ul>\r\n                </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../style.css';\r\n\r\nconst DisplayReview = ({reviews, deleteReview}) =>{\r\n\r\n    const reviewList = reviews.length ? reviews.map( review =>{\r\n        let {name, title, comment, id} = review;\r\n\r\n        return(\r\n          <div className=\"card review-element\" style={{width: \"18rem\"}}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\">{comment}</p>\r\n                <p className=\"card-text blockquote-footer\" style={{fontSize:'1.2em'}}><small className=\"text-muted\">{name}</small></p>\r\n                <button className=\"btn btn-outline-danger\" onClick = { () => {deleteReview(id)}}>Delete</button>\r\n            </div>\r\n            </div>\r\n        )\r\n    }) : <p>No reviews yet</p>\r\n\r\n    return(\r\n        <div className='review-display'>\r\n            {reviewList}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DisplayReview;","import React, {Component} from 'react';\r\nimport '../style.css';\r\n\r\nclass AddReview extends Component{\r\n\r\n    state = {\r\n        name: '',\r\n        title: '',\r\n        comment: ''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        this.props.addReview(this.state);\r\n        this.setState({\r\n            name:'',\r\n            title:'',\r\n            comment:''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='review-form'>\r\n                <h2>Write your reviews here</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type='text' id='name' placeholder='Enter name' onChange={this.handleChange} value = {this.state.name}></input><br/>\r\n                    <input type='text' id='title' placeholder='Enter title' onChange={this.handleChange} value = {this.state.title}></input><br/>\r\n                    <textarea id='comment' placeholder='Comment here' onChange={this.handleChange} value = {this.state.comment}></textarea><br/>\r\n                    <input className=\"btn btn-danger\"type='submit' value='Add Review'></input>\r\n                </form>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default AddReview;\r\n","import React, {Component} from 'react';\r\nimport DisplayReview from './DisplayReview';\r\nimport AddReview from './AddReview';\r\nimport '../style.css';\r\n\r\nclass Reviews extends Component{\r\n    state ={\r\n        reviews: [\r\n            {name:'Akansha Gehlot', title:'Nice content', comment:'Got to know about some really amazing shows', id:101}\r\n        ]\r\n    }\r\n\r\n    addReview = (newReview) =>{\r\n        newReview.id = Math.floor(Math.random() * 10);\r\n        console.log(newReview);\r\n\r\n        let reviews = [...this.state.reviews, newReview];\r\n\r\n        console.log(reviews);\r\n        this.setState({\r\n            reviews : reviews\r\n        })\r\n    }\r\n\r\n    deleteReview = (id) =>{\r\n        console.log(id);\r\n        let newData = this.state.reviews.filter(review =>{\r\n            return review.id !== id;\r\n        })\r\n        console.log(newData);\r\n\r\n        this.setState({\r\n            reviews: newData\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id='review-section'>\r\n                <DisplayReview reviews = {this.state.reviews} deleteReview = {this.deleteReview}/>\r\n                <AddReview addReview = {this.addReview} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reviews;\r\n","import React from 'react';\r\n\r\nclass ShowList extends React.Component{\r\n        state ={\r\n            isFavourite: false,\r\n            isInfoVisible: false\r\n        }\r\n\r\n        handleClick = (e) =>{\r\n            if(e.target.id === 'fav'){\r\n                this.setState(prevProps =>{\r\n                    return{\r\n                        isFavourite : !prevProps.isFavourite\r\n                    }\r\n                })\r\n            }else{\r\n                this.setState(prevProps =>{\r\n                    return{\r\n                        isInfoVisible : !prevProps.isInfoVisible\r\n                    }\r\n                })\r\n            }\r\n            \r\n        }\r\n\r\n        render(){\r\n            const {show, genres, str} = this.props;\r\n            let myStyle ={\r\n                display: this.state.isInfoVisible?'block':'none'\r\n            }\r\n\r\n            return(\r\n                <div className ='main-section-item' key = {show.id}>\r\n                    <div className='image-div'>\r\n                    <img src= {show.image !== null? show.image.medium : '#'} className=\"img-fluid  shadow p-3 mb-5 bg-white rounded\" alt='Not found'/>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className='info'>\r\n                        <h2 onClick={this.handleClick} title='Know more'>{show.name}&nbsp;<span>{this.state.isFavourite? '|Favourite|': ''}</span></h2>\r\n                        <p>({show.network !== null ? show.network.name + \", \" + show.premiered : show.premiered })</p>\r\n                        <div>\r\n                            <h3>Show Info</h3>\r\n                            <ul>\r\n                                <li>\r\n                                    <span className='span-1'>Status: </span>\r\n                                    <span>{show.status}</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span className='span-1'>Genres: </span>\r\n                                    <span>{genres? genres: 'not available'}</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span className='span-1'>Type: </span>\r\n                                    <span>{show.type}</span>\r\n                                </li>\r\n                                <li>\r\n                                    <span className='span-1'>Language: </span>\r\n                                    <span>{show.language}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <br></br>\r\n                        <button id='fav' className=\"btn btn-outline-dark\" onClick ={this.handleClick}>{this.state.isFavourite? 'Remove ': 'Add '}Favourite</button>\r\n                    </div>\r\n               \r\n                    <div className='main-section-text' style={myStyle}>\r\n                        <p>{str}</p>\r\n                    </div>    \r\n                </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default ShowList;","import React from 'react';\r\nimport ShowList from './ShowList';\r\n\r\nconst Shows = ({shows}) =>{\r\n\r\n    const showList = shows.length ? shows.map( show =>{\r\n\r\n        const genres = show.genres.join(' | ');\r\n        let str = show.summary;\r\n        str = str.replace(/(<([^>]+)>)/ig, ' ' );\r\n        str = str.replace(/&amp;/gi, 'and');\r\n\r\n        return(\r\n            <ShowList show={show} genres={genres} str={str} id={show.id}/>\r\n        )\r\n    }) : (<p>Data not found</p>);\r\n\r\n    return(\r\n         <div className='main-section'>\r\n             {showList}\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Shows;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Reviews from './components/Reviews';\nimport Shows from './components/Shows';\n\nclass App extends Component{\n  \n  state = {\n    shows:[],\n    prevEpisodes: []\n  }\n\n  componentDidMount(){\n    console.log('I am in mounting phase!!');\n    axios.get('http://api.tvmaze.com/search/shows?q=friends')\n      .then( response => {\n          //mapping required data\n          const content = response.data.map( item =>{\n              return(\n                item.show\n              )\n          })\n          this.setState({\n            shows: content\n          })\n          console.log(this.state.shows);\n\n          //mapping previous episodes API's\n          const links = content.map( item =>{\n            return(\n                item._links.previousepisode || item._links.nextepisode\n            )\n          })\n          this.setState({\n            links: links\n          })\n          console.log(this.state.links);\n      })    \n  }\n\n  render(){\n    \n    return(\n      <div>\n        <Navbar />\n        <Shows shows = {this.state.shows} />\n        <Reviews />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}